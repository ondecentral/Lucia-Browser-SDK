name: Publish Package

on:
  # Regular releases from main branch
  push:
    branches:
      - main
    tags:
      - 'v*'
  
  # Alpha releases from any branch
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release type'
        required: true
        default: 'alpha'
        type: choice
        options:
          - alpha
          - beta
          - regular

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Build
      run: yarn build

    - name: Test
      run: yarn test

    # Alpha Release Steps
    - name: Version & Publish Alpha
      if: github.event_name == 'workflow_dispatch' && inputs.releaseType != 'regular'
      run: |
        npm version prerelease --preid=alpha --no-git-tag-version
        npm publish --tag alpha --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # Regular Release Steps
    - name: Regular Release Steps
      if: github.event_name == 'push'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        yarn package:release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Regular Publish
      if: github.event_name == 'push'
      run: yarn package:publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # S3 and CloudFront steps only for regular releases
    - name: Copy umd files to S3
      if: github.event_name == 'push'
      uses: arcezd/s3-cp-action@master
      with:
        args: --follow-symlinks --recursive
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-east-1'   # optional: defaults to us-east-1
        SOURCE_DIR: 'dist/umd'      # optional: defaults to entire repository

    - name: Invalidate CloudFront
      if: github.event_name == 'push'
      uses: chetan/invalidate-cloudfront-action@v2
      env:
        DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
        PATHS: "/"
        AWS_REGION: "us-east-1"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
